{"ast":null,"code":"var _jsxFileName = \"/Users/jordanancheta/bidscopeio/src/components/PdfParse.js\";\nimport React from \"react\";\n\nclass PdfParse extends React.Component {\n  constructor() {\n    super();\n\n    this.submitPDF = () => {\n      var x = document.getElementById(\"myFile\");\n      var txt = \"\";\n\n      if ('files' in x) {\n        if (x.files.length == 0) {\n          txt = \"Select one or more files.\";\n        } else {\n          for (var i = 0; i < x.files.length; i++) {\n            txt += \"<br><strong>\" + (i + 1) + \". file</strong><br>\";\n            var file = x.files[i];\n\n            if ('name' in file) {\n              txt += \"name: \" + file.name + \"<br>\";\n            }\n\n            if ('size' in file) {\n              txt += \"size: \" + file.size + \" bytes <br>\";\n            }\n          }\n        }\n      } else {\n        if (x.value == \"\") {\n          txt += \"Select one or more files.\";\n        } else {\n          txt += \"The files property is not supported by your browser!\";\n          txt += \"<br>The path of the selected file: \" + x.value; // If the browser does not support the files property, it will return the path of the selected file instead. \n        }\n      }\n\n      document.getElementById(\"demo\").innerHTML = txt;\n    };\n\n    this.state = {\n      text: \"\" // You only need this if you don't use an arrow function when creating a function\n      // this.submitPDF = this.submitPDF.bind(this);\n\n    };\n  }\n\n  // if (this.state.text === \"\"){\n  // this.setState({text: \"Pdf Text Will Display Here\"});\n  // } else {\n  //    this.setState({text:\"\"});\n  // }\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Upload Your Plans\"), React.createElement(\"form\", {\n      className: \"form pdf-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      name: \"file\",\n      className: \"form-button\",\n      onClick: this.submitPDF,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Click to Upload\")), React.createElement(\"p\", {\n      onClick: this.submitPDF,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, this.state.text)));\n  }\n\n}\n\nexport default PdfParse;","map":{"version":3,"sources":["/Users/jordanancheta/bidscopeio/src/components/PdfParse.js"],"names":["React","PdfParse","Component","constructor","submitPDF","x","document","getElementById","txt","files","length","i","file","name","size","value","innerHTML","state","text","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;AAEnCC,EAAAA,WAAW,GAAG;AACZ;;AADY,SAQfC,SARe,GAQH,MAAM;AACZ,UAAIC,CAAC,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAR;AACA,UAAIC,GAAG,GAAG,EAAV;;AACA,UAAI,WAAWH,CAAf,EAAkB;AAChB,YAAIA,CAAC,CAACI,KAAF,CAAQC,MAAR,IAAkB,CAAtB,EAAyB;AACvBF,UAAAA,GAAG,GAAG,2BAAN;AACD,SAFD,MAEO;AACL,eAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,CAAC,CAACI,KAAF,CAAQC,MAA5B,EAAoCC,CAAC,EAArC,EAAyC;AACvCH,YAAAA,GAAG,IAAI,kBAAkBG,CAAC,GAAC,CAApB,IAAyB,qBAAhC;AACA,gBAAIC,IAAI,GAAGP,CAAC,CAACI,KAAF,CAAQE,CAAR,CAAX;;AACA,gBAAI,UAAUC,IAAd,EAAoB;AAClBJ,cAAAA,GAAG,IAAI,WAAWI,IAAI,CAACC,IAAhB,GAAuB,MAA9B;AACD;;AACD,gBAAI,UAAUD,IAAd,EAAoB;AAClBJ,cAAAA,GAAG,IAAI,WAAWI,IAAI,CAACE,IAAhB,GAAuB,aAA9B;AACD;AACF;AACF;AACF,OAfD,MAgBK;AACH,YAAIT,CAAC,CAACU,KAAF,IAAW,EAAf,EAAmB;AACjBP,UAAAA,GAAG,IAAI,2BAAP;AACD,SAFD,MAEO;AACLA,UAAAA,GAAG,IAAI,sDAAP;AACAA,UAAAA,GAAG,IAAK,wCAAwCH,CAAC,CAACU,KAAlD,CAFK,CAEoD;AAC1D;AACF;;AACDT,MAAAA,QAAQ,CAACC,cAAT,CAAwB,MAAxB,EAAgCS,SAAhC,GAA4CR,GAA5C;AACD,KApCU;;AAEZ,SAAKS,KAAL,GAAa;AACVC,MAAAA,IAAI,EAAE,EADI,CAGb;AACA;;AAJa,KAAb;AAKF;;AA8BE;AACA;AACA;AACA;AACA;AAEHC,EAAAA,MAAM,GAAG;AACN,WACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADH,EAES;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CAFT,EAKS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG;AAAQ,MAAA,IAAI,EAAC,MAAb;AAAoB,MAAA,SAAS,EAAC,aAA9B;AAA4C,MAAA,OAAO,EAAE,KAAKf,SAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADH,CALT,EASG;AAAG,MAAA,OAAO,EAAE,KAAKA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKa,KAAL,CAAWC,IAAxC,CATH,CADH,CADH;AAeF;;AA7DmC;;AAkEvC,eAAejB,QAAf","sourcesContent":["import React from \"react\";\n\n\nclass PdfParse extends React.Component {\n   \n    constructor() {\n      super();\n      this.state = {\n         text: \"\",\n      }\n      // You only need this if you don't use an arrow function when creating a function\n      // this.submitPDF = this.submitPDF.bind(this);\n   }\n   submitPDF = () => {\n         var x = document.getElementById(\"myFile\");\n         var txt = \"\";\n         if ('files' in x) {\n           if (x.files.length == 0) {\n             txt = \"Select one or more files.\";\n           } else {\n             for (var i = 0; i < x.files.length; i++) {\n               txt += \"<br><strong>\" + (i+1) + \". file</strong><br>\";\n               var file = x.files[i];\n               if ('name' in file) {\n                 txt += \"name: \" + file.name + \"<br>\";\n               }\n               if ('size' in file) {\n                 txt += \"size: \" + file.size + \" bytes <br>\";\n               }\n             }\n           }\n         } \n         else {\n           if (x.value == \"\") {\n             txt += \"Select one or more files.\";\n           } else {\n             txt += \"The files property is not supported by your browser!\";\n             txt  += \"<br>The path of the selected file: \" + x.value; // If the browser does not support the files property, it will return the path of the selected file instead. \n           }\n         }\n         document.getElementById(\"demo\").innerHTML = txt;\n       }\n      // if (this.state.text === \"\"){\n      // this.setState({text: \"Pdf Text Will Display Here\"});\n      // } else {\n      //    this.setState({text:\"\"});\n      // }\n\n   render() {\n      return (\n         <div>\n            <div className=\"App-content\">\n               <h2>Upload Your Plans</h2>\n                     <form className=\"form pdf-form\">\n                        <input type=\"text\"></input>\n                     </form>\n                     <div>\n                        <button name=\"file\" className=\"form-button\" onClick={this.submitPDF}>Click to Upload</button>\n                     </div>\n                  \n               <p onClick={this.submitPDF}>{this.state.text}</p>\n            </div>\n          </div>\n      );\n   }\n}\n \n\n\nexport default PdfParse;\n"]},"metadata":{},"sourceType":"module"}